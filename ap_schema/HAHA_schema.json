{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "http://oasis-open.org/openc2/oc2ls/v1.0.1.json",
  "title": "HAHA",
  "type": "object",
  "description": "HAHA",
  "oneOf": [
    {
      "$ref": "#/definitions/OpenC2-Command",
      "description": "<Fill Me In>"
    },
    {
      "$ref": "#/definitions/OpenC2-Response",
      "description": "<Fill Me In>"
    }
  ],
  "definitions": {
    "OpenC2-Command": {
      "title": "OpenC2 Command",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "action",
        "target"
      ],
      "properties": {
        "action": {
          "$ref": "#/definitions/Action",
          "description": "The task or activity to be performed (i.e., the 'verb')."
        },
        "target": {
          "$ref": "#/definitions/Target",
          "description": "The object of the Action. The Action is performed on the Target."
        },
        "args": {
          "$ref": "#/definitions/Args",
          "description": "Additional information that applies to the Command."
        },
        "actuator": {
          "$ref": "#/definitions/Actuator",
          "description": "The subject of the Action. The Actuator executes the Action on the Target."
        },
        "command_id": {
          "type": "string",
          "description": "An identifier of this Command."
        }
      }
    },
    "OpenC2-Response": {
      "title": "OpenC2 Response",
      "type": "object",
      "additionalProperties": false,
      "required": [
        "status"
      ],
      "properties": {
        "status": {
          "$ref": "#/definitions/Status-Code",
          "description": "An integer status code"
        },
        "status_text": {
          "type": "string",
          "description": "A free-form human-readable description of the Response status"
        },
        "results": {
          "$ref": "#/definitions/Results",
          "description": "Map of key:value pairs that contain additional results based on the invoking Command."
        }
      }
    },
    "Action": {
      "title": "Action",
      "type": "string",
      "oneOf": [
        {
          "const": "query",
          "description": "Initiate a request for information."
        },
        {
          "const": "allow",
          "description": "Permit access to or execution of a Target."
        },
        {
          "const": "cancel",
          "description": "Invalidate a previously issued Action."
        },
        {
          "const": "set",
          "description": "Change a value, configuration, or state of a managed entity."
        }
      ]
    },
    "Target": {
      "title": "Target",
      "type": "object",
      "description": "OpenC2 Target datatypes",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 1,
      "properties": {
        "features": {
          "$ref": "#/definitions/Features",
          "description": "A set of items used with the query Action to determine an Actuator's capabilities."
        },
        "ipv4_net": {
          "$ref": "#/definitions/IPv4-Net",
          "description": "An IPv4 address range including CIDR prefix length."
        },
        "ipv6_net": {
          "$ref": "#/definitions/IPv6-Net",
          "description": "An IPv6 address range including prefix length."
        },
        "sbom": {
          "$ref": "#/definitions/SBOM"
        },
        "x-sfractal-blinky:hello_world": {
          "$ref": "#/definitions/SFractal-Blinky_Hello-World"
        },
        "x-sfractal-blinky:led": {
          "$ref": "#/definitions/SFractal-Blinky_LED"
        },
        "x-sfractal-blinky:led_pattern": {
          "$ref": "#/definitions/SFractal-Blinky_LED-Pattern"
        },
        "x-sfractal-blinky:buzzer": {
          "$ref": "#/definitions/SFractal-Blinky_Buzzer"
        },
        "x-sfractal-blinky:valve": {
          "$ref": "#/definitions/SFractal-Valve"
        },
        "x-sfractal-blinky:spa_key": {
          "$ref": "#/definitions/SFractal-SPA_Key"
        }
      }
    },
    "Actuator": {
      "title": "Actuator",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "maxProperties": 1
    },
    "Args": {
      "title": "Args",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "properties": {
        "start_time": {
          "$ref": "#/definitions/Date-Time",
          "description": "The specific date/time to initiate the Command"
        },
        "stop_time": {
          "$ref": "#/definitions/Date-Time",
          "description": "The specific date/time to terminate the Command"
        },
        "duration": {
          "$ref": "#/definitions/Duration",
          "description": "The length of time for an Command to be in effect"
        },
        "response_requested": {
          "$ref": "#/definitions/Response-Type",
          "description": "The type of Response required for the Command: `none`, `ack`, `status`, `complete`."
        }
      }
    },
    "Status-Code": {
      "title": "Status Code",
      "type": "integer",
      "oneOf": [
        {
          "const": 102,
          "description": "Processing - an interim Response used to inform the Producer that the Consumer has accepted the Command but has not yet completed it."
        },
        {
          "const": 200,
          "description": "OK - the Command has succeeded."
        },
        {
          "const": 400,
          "description": "BadRequest - the Consumer cannot process the Command due to something that is perceived to be a Producer error (e.g., malformed Command syntax)."
        },
        {
          "const": 401,
          "description": "Unauthorized - the Command Message lacks valid authentication credentials for the target resource or authorization has been refused for the submitted credentials."
        },
        {
          "const": 403,
          "description": "Forbidden - the Consumer understood the Command but refuses to authorize it."
        },
        {
          "const": 404,
          "description": "NotFound - the Consumer has not found anything matching the Command."
        },
        {
          "const": 500,
          "description": "InternalError - the Consumer encountered an unexpected condition that prevented it from performing the Command."
        },
        {
          "const": 501,
          "description": "NotImplemented - the Consumer does not support the functionality required to perform the Command."
        },
        {
          "const": 503,
          "description": "ServiceUnavailable - the Consumer is currently unable to perform the Command due to a temporary overloading or maintenance of the Consumer."
        }
      ]
    },
    "Results": {
      "title": "Results",
      "type": "object",
      "additionalProperties": false,
      "minProperties": 1,
      "properties": {
        "versions": {
          "$ref": "#/definitions/ArrayOf$versions",
          "description": "List of OpenC2 language versions supported by this Actuator"
        },
        "profiles": {
          "$ref": "#/definitions/ArrayOf$profiles",
          "description": "List of profiles supported by this Actuator"
        },
        "pairs": {
          "$ref": "#/definitions/Action-Targets",
          "description": "List of targets applicable to each supported Action"
        },
        "rate_limit": {
          "type": "number",
          "description": "Maximum number of requests per minute supported by design or policy",
          "minimum": 0
        }
      }
    },
    "IPv4-Net": {
      "title": "IPv4 Net",
      "type": "string",
      "pattern": "^((25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9]?[0-9])(\\/(3[0-2]|[0-2]?[0-9]))?$"
    },
    "IPv6-Net": {
      "title": "IPv6 Net",
      "type": "string",
      "pattern": "^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))(%.+)?s*(\\/([0-9]|[1-9][0-9]|1[0-1][0-9]|12[0-8]))?$"
    },
    "Features": {
      "title": "Features",
      "type": "array",
      "description": "An array of zero to ten names used to query an Actuator for its supported capabilities.",
      "maxItems": 10,
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/Feature"
      }
    },
    "Properties": {
      "title": "Properties",
      "type": "array",
      "description": "A list of names that uniquely identify properties of an Actuator.",
      "minItems": 1,
      "uniqueItems": true,
      "items": {
        "type": "string"
      }
    },
    "Action-Targets": {
      "title": "Action Targets",
      "type": "object",
      "description": "Map of each action supported by this actuator to the list of targets applicable to that action",
      "additionalProperties": false,
      "properties": {
        "query": {
          "$ref": "#/definitions/Target$Query"
        },
        "allow": {
          "$ref": "#/definitions/Target$Allow"
        },
        "cancel": {
          "$ref": "#/definitions/Target$Cancel"
        },
        "set": {
          "$ref": "#/definitions/Target$Set"
        }
      }
    },
    "Date-Time": {
      "title": "Date Time",
      "type": "integer",
      "description": "Date and Time",
      "minimum": 0
    },
    "Duration": {
      "title": "Duration",
      "type": "integer",
      "description": "A length of time",
      "minimum": 0
    },
    "Feature": {
      "title": "Feature",
      "type": "string",
      "description": "Specifies the results to be returned from a query features Command",
      "oneOf": [
        {
          "const": "versions",
          "description": "List of OpenC2 Language versions supported by this Actuator"
        },
        {
          "const": "profiles",
          "description": "List of profiles supported by this Actuator"
        },
        {
          "const": "pairs",
          "description": "List of supported Actions and applicable Targets"
        },
        {
          "const": "rate_limit",
          "description": "Maximum number of Commands per minute supported by design or policy"
        }
      ]
    },
    "Nsid": {
      "title": "Namespace Identifier",
      "type": "string",
      "description": "A short identifier that refers to a namespace.",
      "minLength": 1,
      "maxLength": 16
    },
    "Response-Type": {
      "title": "Response Type",
      "type": "string",
      "oneOf": [
        {
          "const": "none",
          "description": "No response"
        },
        {
          "const": "ack",
          "description": "Respond when Command received"
        },
        {
          "const": "status",
          "description": "Respond with progress toward Command completion"
        },
        {
          "const": "complete",
          "description": "Respond when all aspects of Command completed"
        }
      ]
    },
    "Version": {
      "title": "Version",
      "type": "string",
      "description": "Major.Minor version number"
    },
    "SBOM": {
      "title": "SBOM",
      "type": "object",
      "description": "Software Bill of Materials"
    },
    "SFractal-Blinky_Hello-World": {
      "title": "Hello World",
      "type": "object",
      "description": "Hello World"
    },
    "SFractal-Blinky_LED": {
      "title": "LED",
      "type": "object",
      "description": "LED"
    },
    "SFractal-Blinky_LED-Pattern": {
      "title": "LED Pattern",
      "type": "object",
      "description": "LED Pattern"
    },
    "SFractal-Blinky_Buzzer": {
      "title": "Buzzer",
      "type": "object",
      "description": "Buzer"
    }
    "SFractal-Valve": {
      "title": "Valve",
      "type": "object",
      "description": "Valve"
    },
    "SFractal-SPA_Key": {
      "title": "SPA Key",
      "type": "object",
      "description": "SPA Key"
    },
    "Target$Query": {
      "title": "Target$Query",
      "type": "string",
      "oneOf": [
        {
          "const": "features"
        },
        {
          "const": "sbom"
        },
        {
          "const": "x-sfractal-blinky:hello_world"
        }
      ]
    },
    "Target$Allow": {
      "title": "Target$Allow",
      "type": "string",
      "oneOf": [
        {
          "const": "ipv4_net"
        },
        {
          "const": "ipv6_net"
        }
      ]
    },
    "Target$Cancel": {
      "title": "Target$Cancel",
      "type": "string",
      "oneOf": [
        {
          "const": "command_id"
        }
      ]
    },
    "Target$Set": {
      "title": "Target$Set",
      "type": "string",
      "oneOf": [
        {
          "const": "x-sfractal-blinky:led"
        },
        {
          "const": "x-sfractal-blinky:led_pattern"
        },
        {
          "const": "x-sfractal-blinky:buzzer"
        },
        {
          "const": "x-sfractal-blinky:valve"
        },
        {
          "const": "x-sfractal-blinky:spa_key"
        }
      ]
    },
    "ArrayOf$versions": {
      "title": "ArrayOf$versions",
      "type": "array",
      "description": "List of OpenC2 language versions supported by this Actuator",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/Version"
      }
    },
    "ArrayOf$profiles": {
      "title": "ArrayOf$profiles",
      "type": "array",
      "description": "List of profiles supported by this Actuator",
      "uniqueItems": true,
      "items": {
        "$ref": "#/definitions/Nsid"
      }
    },
    "Integer$pid": {
      "title": "Integer$pid",
      "type": "integer",
      "description": "Process ID of the process",
      "minimum": 0
    }
  }
}